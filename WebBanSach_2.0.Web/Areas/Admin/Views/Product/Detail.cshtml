@model AdminProductDetailResponse
@{
    ViewBag.Title = "Details";
    var cate = new SelectList(Model.Categories.OrderBy(m => m.CategoryId), "CategoryId", "CategoryName");

    var request = new WebBanSach_2_0.Model.RequestModels.AdminProductRequest();
}

<!-- Breadcrumbs-->
<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="@Url.Action("Index","Dashboard")">Trang chủ</a>
    </li>
    <li class="breadcrumb-item">Quản lý</li>
    <li class="breadcrumb-item">Sản phẩm</li>
    @if (Model.Product.ProductId == 0)
    {
        <li class="breadcrumb-item active">Tạo mới</li>
    }
    else
    {
        <li class="breadcrumb-item active">Edit</li>
    }
</ol>

<div class="card mb-3">
    <div class="card-header">
        <i class="far fa-edit"></i>
        @(Model.Product.ProductId == 0 ? ("Tạo mới") : ("Chỉnh sửa"))
    </div>
    <div class="card-body">
        <form method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Product.ProductId)
                @Html.HiddenFor(model => model.Product.Purchase)
                @Html.HiddenFor(model => model.Product.Star)
                @Html.HiddenFor(model => model.Product.UpdateBy)
                @Html.HiddenFor(model => model.Product.UpdatedDate)
                @Html.HiddenFor(model => model.Product.CreateBy)
                @Html.HiddenFor(model => model.Product.CreateDate)
                @Html.HiddenFor(model => model.Product.Image)
               
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.Label("Tựa sách", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Thể loại", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Product.CategoryId, cate, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Product.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Mô tả", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Giá", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Link đọc online", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product.Link, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.Link, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Trạng thái", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Product.Status)
                                    @Html.ValidationMessageFor(model => model.Product.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="col-md-5">
                        <div class="form-group">
                            <div class="col-md-10">
                                <img id="productImg" src="@(!string.IsNullOrEmpty(Model.Product.Image) ? Model.Product.Image : "/img/noCover.jpg")" style="border:solid;height:400px;width:100%" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                <input type="file" id="file" name="file" class="form-control-file border" accept="image/*">
                            </div>
                            
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </form>

        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        </div>

    </div>
</div>


@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        (function () {
            $("#file").change(function () {
                readURL(this);
            });
        })();

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#productImg').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}